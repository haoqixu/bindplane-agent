# Copyright  observIQ, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# JMX stage downloads the opentelemetry-jmx-metrics.jar used by JMX receivers
#
FROM curlimages/curl:7.82.0 as jmxjar
ARG JMX_JAR_VERSION=v1.15.0
USER root
RUN curl -L \
    --output /opentelemetry-java-contrib-jmx-metrics.jar \
    "https://github.com/open-telemetry/opentelemetry-java-contrib/releases/download/${JMX_JAR_VERSION}/opentelemetry-jmx-metrics.jar"


# eclipse-temurn stage provides the Java runtime used by JMX receivers.
# It is a replacement for the openjdk image, which is considered deprecated.
#
FROM amazoncorretto:8-alpine3.17-jre as jre


# Use debian:stable to retrieve journalctl. We need to pin to this exact
# image to be sure our version of systemd does not change. If we update
# systemd, make sure the COPY commands for journalctl are updated to reflect
# the new shared libraries. You can use the `ldd /bin/journalctl` command
# to see the list of shared libraries.
#
FROM debian:stable-20230703 as journal
RUN apt-get update -qq && apt-get install systemd -y
RUN mkdir /usr/lib/journald
RUN ldd /bin/journalctl | grep -v linux-vdso.so.1 | awk '{print $3}' | xargs -I{} cp {} /usr/lib/journald

# Final Stage
#
FROM alpine:3.17
WORKDIR /

# TODO(jsirianni): Add systemd
RUN apk --no-cache add ca-certificates tzdata

# Copy the journalctl binary and required shared libaries. 
COPY --from=journal /bin/journalctl /bin/journalctl
COPY --from=journal /usr/lib/journald /usr/lib/journald
COPY --from=journal /usr/lib/ld-linux-*.so.1 /usr/lib/journald
# COPY --from=journal /usr/lib/ld-linux-*.so.1 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/systemd/libsystemd-shared-252.so /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libc.so.6 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libacl.so.1 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libblkid.so.1 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libcap.so.2 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libcrypt.so.1 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libgcrypt.so.20 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libip4tc.so.2 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libkmod.so.2 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/liblz4.so.1 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libmount.so.1 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libcrypto.so.3 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libpam.so.0 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libseccomp.so.2 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libselinux.so.1 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libzstd.so.1 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/liblzma.so.5 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libm.so.6 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libgpg-error.so.0 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libaudit.so.1 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libpcre2-8.so.0 /lib/journald
# COPY --from=journal /usr/lib/*-linux-gnu/libcap-ng.so.0 /lib/journald

# LD_LIBRARY_PATH is not set by default, so point it to /lib/journald.
ENV LD_LIBRARY_PATH=/usr/lib/journald

RUN adduser \
    --disabled-password \
    --gecos "" \
    --home /etc/otel \
    --no-create-home \
    --uid 10005 \
    --shell /sbin/nologin \
    otel

RUN mkdir \
    /etc/otel \
    /etc/otel/storage \
    && chown -R otel:otel /etc/otel \
    && chmod 0750 /etc/otel/storage
ENV OIQ_OTEL_COLLECTOR_HOME=/etc/otel
ENV OIQ_OTEL_COLLECTOR_STORAGE=/etc/otel/storage

ENV JAVA_HOME=/usr/lib/jvm/java-8-amazon-corretto
COPY --from=jre $JAVA_HOME $JAVA_HOME
ENV PATH="${JAVA_HOME}/bin:${PATH}"

RUN mkdir /licenses
COPY LICENSE /licenses/observiq-otel-collector.license

COPY observiq-otel-collector /collector/observiq-otel-collector
COPY plugins /etc/otel/plugins

# The OTEL JMX receiver / opentelemetry-java-contrib-jmx-metrics.jar writes a temporary
# configuration to disk. A volume can be mounted at $TMPDIR when running the container
# with a readonly filesystem.
COPY --from=jmxjar /opentelemetry-java-contrib-jmx-metrics.jar /opt/opentelemetry-java-contrib-jmx-metrics.jar 
ENV TMPDIR=/tmp/java

COPY config/logging.stdout.yaml /etc/otel/logging.yaml

# Default config allows the collector to run without an injected config, which is required
# when connecting to an OpAMP platform.
COPY config/example.yaml /etc/otel/config.yaml

RUN chown otel:otel \
    /etc/otel/config.yaml \
    /etc/otel/logging.yaml

RUN chmod 0600 \
    /etc/otel/config.yaml \
    /etc/otel/logging.yaml

USER otel
WORKDIR /etc/otel

# User should mount /etc/otel/config.yaml at runtime using docker volumes / k8s configmap unless
# connecting to an OpAMP platform.
ENTRYPOINT [ "/collector/observiq-otel-collector" ]
